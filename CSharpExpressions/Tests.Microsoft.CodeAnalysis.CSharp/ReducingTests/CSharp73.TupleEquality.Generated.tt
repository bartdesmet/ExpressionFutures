// Prototyping extended expression trees for C#.
//
// bartde - November 2015

<#
// NB: When ading a test, it will be *SKIPPED* by default. In order to enable it, review the generated
//     test code and go to the .Verify.cs file to add an entry acknowledging the manual inspection by
//     providing an outcome.

// NB: Editing and saving this file can take a *VERY LONG* time because it invokes the C# compiler at
//     text template processing time. Be patient while Visual Studio appears to hang.
#>
<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#
var name = "CSharp73_TupleEquality_Reducing";

var exprs = new[]
{
    "(Expression<Func<bool>>)(() => (1, 2) == (3, 4))",
    "(Expression<Func<bool>>)(() => (1, int.Parse(\"2\")) != (int.Parse(\"3\"), 4))",
    "(Expression<Func<(int, int), bool>>)(t => t == (3, 4))",
    "(Expression<Func<(int, int), bool>>)(t => (1, 2) != t)",
    "(Expression<Func<bool>>)(() => (1, (true, \"foo\")) == (3, (false, \"bar\")))",
    "(Expression<Func<bool>>)(() => (int.Parse(\"1\"), (true, \"foo\".ToUpper())) != (3, (\"qux\".StartsWith(\"z\"), \"bar\")))",
    "(Expression<Func<(bool, string), bool>>)(t => (1, t) == (3, (false, \"bar\")))",
    "(Expression<Func<(bool, string), bool>>)(t => (1, (true, \"foo\")) != (3, t))",
};
#>
<#@ include file="CompilerTests.t4" #>