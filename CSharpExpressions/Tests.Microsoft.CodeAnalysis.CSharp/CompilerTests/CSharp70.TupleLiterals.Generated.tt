// Prototyping extended expression trees for C#.
//
// bartde - May 2020

<#
// NB: When ading a test, it will be *SKIPPED* by default. In order to enable it, review the generated
//     test code and go to the .Verify.cs file to add an entry acknowledging the manual inspection by
//     providing an outcome.

// NB: Editing and saving this file can take a *VERY LONG* time because it invokes the C# compiler at
//     text template processing time. Be patient while Visual Studio appears to hang.
#>
<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#
var name = "CSharp70_TupleLiterals";

var exprs = new[]
{
    // Literal
    "(Expression<Func<(int, string)>>)(() => (42, \"bar\"))",
    "(Expression<Func<int, string, (int, string)>>)((i, s) => (i, s))",
    "(Expression<Func<int, string, (int, string)>>)((i, s) => (x: i, name: s))",

    // Access
    "(Expression<Func<(int, string), int>>)(t => t.Item1)",
    "(Expression<Func<(int, string), string>>)(t => t.Item2)",
    "(Expression<Func<(int x, string s), int>>)(t => t.x)",
    "(Expression<Func<(int x, string s), string>>)(t => t.s)",
    "(Expression<Func<(int a, int b, int c, int d, int e, int f, int g, int h, int i, int j), int>>)(t => t.j)",
};
#>
<#@ include file="CompilerTests.t4" #>