// Prototyping extended expression trees for C#.
//
// bartde - December 2021

<#
// NB: When ading a test, it will be *SKIPPED* by default. In order to enable it, review the generated
//     test code and go to the .Verify.cs file to add an entry acknowledging the manual inspection by
//     providing an outcome.

// NB: Editing and saving this file can take a *VERY LONG* time because it invokes the C# compiler at
//     text template processing time. Be patient while Visual Studio appears to hang.
#>
<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#
var name = "CSharp90_PatternMatching";

var exprs = new[]
{
    // Relational
    "(Expression<Func<object, bool>>)(o => o is > 0)",
    "(Expression<Func<int?,   bool>>)(o => o is > 0)",
    "(Expression<Func<int,    bool>>)(o => o is > 0)",

    "(Expression<Func<long,    bool>>)(o => o is >  1)",
    "(Expression<Func<uint,    bool>>)(o => o is >= 2)",
    "(Expression<Func<double,  bool>>)(o => o is <  3.14)",
    "(Expression<Func<byte,    bool>>)(o => o is <= 255)",

    "(Expression<Func<decimal, bool>>)(o => o is <= 4.95m)", // FIXED: Decimal literal needs to be lowered.

    // And
    "(Expression<Func<object, bool>>)(o => o is >= 0 and < 10)",

    // Or
    "(Expression<Func<object, bool>>)(o => o is 42 or 43)",

    // Not
    "(Expression<Func<object, bool>>)(o => o is not null)",
    "(Expression<Func<object, bool>>)(o => o is not 42)",

    // MSDN samples
    "(Expression<Func<char, bool>>)(c => c is (>= 'a' and <= 'z') or (>= 'A' and <= 'Z') or '.' or ',')",
    "(Expression<Func<DateTime, bool>>)(date => date is { Year: 2020, Month: 5, Day: 19 or 20 or 21 })",
};
#>
<#@ include file="CompilerTests.t4" #>