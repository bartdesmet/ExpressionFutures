// Prototyping extended expression trees for C#.
//
// bartde - November 2015

<#
// NB: When ading a test, it will be *SKIPPED* by default. In order to enable it, review the generated
//     test code and go to the .Verify.cs file to add an entry acknowledging the manual inspection by
//     providing an outcome.

// NB: Editing and saving this file can take a *VERY LONG* time because it invokes the C# compiler at
//     text template processing time. Be patient while Visual Studio appears to hang.
#>
<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#
var name = "CSharp30_Statements_ForEach";

var exprs = new[]
{
    "(Expression<Action<string>>)(s => { foreach (var c in s) Console.Write(c); })",
    "(Expression<Action<int[]>>)(xs => { foreach (var x in xs) Console.Write(x); })",
    "(Expression<Action<object[]>>)(xs => { foreach (int x in xs) Console.Write(x); })",
    "(Expression<Action<IEnumerable<int>>>)(xs => { foreach (var x in xs) Console.Write(x); })",
    "(Expression<Action<List<int>>>)(xs => { foreach (var x in xs) Console.Write(x); })",
    "(Expression<Action<IList<int>>>)(xs => { foreach (var x in xs) Console.Write(x); })",
    "(Expression<Action<ArrayList>>)(xs => { foreach (int x in xs) Console.Write(x); })",
    "(Expression<Action<int[]>>)(xs => { foreach (var x in xs) { if (x == 5) continue; if (x == 8) break; } })",
    "(Expression<Action<dynamic>>)(xs => { foreach (int x in xs) Console.Write(x); })",
};
#>
<#@ include file="CompilerTests.t4" #>